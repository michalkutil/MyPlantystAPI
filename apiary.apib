FORMAT: 1A
HOST: http://my.plantyst.com/Api

# MyPlantyst API

# Group Measurement

## Measurements Collection [/Measuremenents]

+ Model (application/hal+json)
    + Body

            {
                "_links":{
                    "self":{
                        "href":"/Api/Measurements"
                    }
                },
                "_embedded":{
                    "timezone":[
                        {
                            "id":"Central Europe Standard Time",
                            "name":"(UTC+01:00) Praha, Bratislava, Budapešť, Bělehrad, Lublaň",
                            "iana":"Europe/Prague",
                            "_links":{
                                "self":{
                                    "href":"/Api/TimeZone/Central%20Europe%20Standard%20Time"
                                }
                            }
                        }
                    ],
                    "measurement":[
                        {
                            "measurementId":1,
                            "archived":false,
                            "rights":["Owner"],
                            "_links":{
                                "self":{
                                    "href":"/Api/Measurement/1"
                                },
                                "timezone":{
                                    "href":"/Api/TimeZone/Central%20Europe%20Standard%20Time"
                                }
                            }
                        },
                        {
                            "measurementId":2,
                            "archived":false,
                            "rights":["Editor"],
                            "_links":{
                                "self":{
                                    "href":"/Api/Measurement/2"
                                },
                                "timezone":{
                                    "href":"/Api/TimeZone/Central%20Europe%20Standard%20Time"
                                }
                            }
                        }
                    ]
                }
            }

### List Measurements [GET]

Gets ĺist of measurements assigned to the currently signed up user along with
array of rights the user has to each of the measurements. The rights may be one
of the following (*so far* being in inclusion, i. e. each subsequent right contains
the previous).

* View - Right to view measurement data.
* Editor - Right to edit the measurement and its annotations.
* Admin - ?
* Owner - ?

+ Response 200

    [Measurements Collection][]

# Group Measurement Annotation

## Measurement Annotation [/Measurement/{id}/Annotation/{time}/{order}]

+ Parameters
    + id (required, int, `14`) ... Measurement annotation `id` the new annotation belongs to.
    + time (required, datetime, `20141110124300`) ... The timestamp of the annotation in the format YYYYMMDDHHMMSS.
        *Notice: the timestamp identifier of the annotation is in the UTC format and will be parsed so.*    
    
    + order (required, int, `4`) ... The order of the annotation in the list of annotations for the given measurement and timestamp.
    Typically with the value 0. (The indexation starts at zero.)

+ Model (application/hal+json)
    + Body

            {
                text: "Some text"
                userId: 3
                time: "2014-11-10T12:43:00Z"
                modificationTime: "2014-11-10T17:23:06.1402688Z"
                order: 0
                measurementId: 1
                _links: {
                    self: {
                        href: "/Api/Measurement/1/Annotation/20141110124300/0"
                    }
                }
            }
            
### Get Measurement Annotation [GET]

Returns the annotation.
        
+ Response 200

    [Measurement Annotation][]

+ Response 403

+ Response 404

### Change Annotation [PATCH]

Updates the text of the annotation.

+ Request (application/json)

        {
            "text": "Some new text"
        }

+ Response 204

+ Response 403

+ Response 404

### Delete Annotation [DELETE]

Deletes the annotation.

+ Response 204

+ Response 403

+ Response 404

## Measurement Annotations Collection [/Measurement/{id}/Annotation{?from,to}]

+ Parameters
    + id (required, int, `14`) ... Measurement annotation `id` the listed annotations belong to.

+ Model (application/hal+json)
    + Body

            {
                _links: {
                    self: {
                        href: "/Api/Measurement/1/Annotations"
                    }
                }
                _embedded: {
                    annotation:[
                        {
                            text: "Some text",
                            userId: 3,
                            time: "2014-12-12T12:12:00.000Z",
                            modificationTime: "2014-11-10T17:23:06.1402688Z",
                            order: 0,
                            measurementId: 1,
                            _links: {
                                self: {
                                href: "/Api/Measurement/1/Annotation/20141212121212/0"
                                }
                            }
                        },
                        {
                            text: "Some text",
                            userId: 3,
                            time: "2014-12-12T12:12:00Z",
                            modificationTime: "2014-10-31T09:58:14.3669745Z",
                            order: 1,
                            measurementId: 1,
                            _links: {
                                self: {
                                    href: "/Api/Measurement/1/Annotation/20141212121212/1"
                                }
                            }
                        }
                    ]
                }
            }

### List Measurement Annotations [GET]

Returns list of annotations for the measurement specified by `id`,
having timestamp between `from` and `to`. The timestamps should be
in the UTC format in order to match the row keys of the annotations
to be returned. The timestamp must contain the information about
either time zone offset or being in UTC format, or else its interpretation
is not defined.

+ Parameters
    + from (required, datetime, `2014-01-05T12:43Z`) ... Lower bound of the temporal interval the annotations are listed in. _Comment: the timestamps of annotations are rounded to minutes._
    + to (required, datetime, `2014-02-15T15:40Z`) ... Upper bound of the temporal interval the annotations are listed in. _Comment: the timestamps of annotations are rounded to minutes._

+ Response 200

    [Measurement Annotations Collection][]

+ Response 403

### Create a Measurement Annotation [POST]

To create a new measurement annotation simply provide a JSON hash of the *text* and *time* attributes for the new measurement annotation.

The *time* attribute must contain the information about
either time zone offset or being in UTC format, or else its interpretation
is not defined.

Returns the recently added annotation.

+ Request (application/json)

        {
            "text": "Some text",
            "time": "2014-11-10T10:50Z"
        }
        
+ Response 200

    [Measurement Annotation][]

+ Response 403


# Group Measurement Data

## Measurement TimeSeries Aggregation Collection [/MeasurementTimeSeriesAggregation]

+ Model (application/json)
    + Body

            {
                "results":[
                    {
                        "query": {
                            "measurementId": 2,
                            "from": "2011-11-30T23:00:00Z",
                            "to": "2011-12-01T07:00:00Z",
                            "view": "Base.HourSet"
                        },
                        "outputFormat": [
                            "ItemCount",
                            "TimeSquareSum",
                            "TimeSum",
                            "TimeValueSum",
                            "ValueSum"
                        ],
                        "data":[1, 1.44, 1.2, 2.5, 3]
                    },
                    {
                        "query": {
                            "measurementId": 14,
                            "view": "Base.MinuteSet",
                            "from": "2012-12-20T12:34:56Z",
                            "to": "2013-01-01T01:02Z"
                        },
                        "outputFormat": ["ValueSum"],
                        "data":[2,3,3,3,3,3,3,3,2,3,3,3,3,3,3,2]
                    }
                ]
            }


### Measurement TimeSeries Aggregation Collection Request [POST]

Returns cumulative utilization data for each of the queries provided in the `queries` field of the
JSON *model*.

The payload contains `Queries` array. Its members contain:
* `MeasurementId` `int` required. Identifies the ID of the measurement.
* `View` `string` required. Identifies the measurement view to be used. 
The view available for the given measurement is provided in the results 
of Measurement API endpoint.
* `From` `DateTime` required. Specifies the lower bound of the data query.
* `To` `DateTime` required. Specifies the upper bound of the data query.

In the result, each of the members of the `results` array contains:
* `query` A copy of a query from the *model*, identifying which query the result belongs to.
* `outputFormat` Array of fields present in the `data` array. The array defines the meaning of the *data* values
in their respective order, as they are n-uples put into a single, one-dimensional array.
The n-uple is described by n elements of the `outputFormat` array.
The array may contain the following values:
    * `itemCount` `int`. Omittable.
    * `timeSquareSum` `long`. Omittable.
    * `timeSum` `long`. Omittable.
    * `timeValueSum` `double`. Omittable.
    * `valueSum` `double`. Always present, specifies the count of items in the aggregation..

* `data` The result of the query in format described by the `outputFormat` array.

+ Request

        {
            "Queries": [
                {
                    "MeasurementId": 2,
                    "View": "baseHour",
                    "From": "2011-11-30T23:00",
                    "To": "2011-12-01T07:00"
                },
                {
                    "MeasurementId": 14,
                    "View": "baseHour",
                    "From": "2012-12-20T12:34:56",
                    "To": "2013-01-01T01:02"
                }
            ]
        }

+ Response 200

    [Measurement TimeSeries Aggregation Collection][]

+ Response 401

## Utilization Cumulative Collection [/UtilizationCumulative/{?variableId,from,to}]

**Warning:** Not implemented - need revision!

+ Model (application/json)
    + Body

            [
                {
                    "Uptime":0,
                    "Setup":9,
                    "Stop":1431,
                    "NoData":0,
                    "Other":0,
                    "RowKey":"20140215",
                    "Timestamp":"2014-02-15T23:02:39.6195401+00:00",
                },
                {
                    "Uptime":85,
                    "Setup":38,
                    "Stop":1317,
                    "NoData":0,
                    "Other":0,
                    "RowKey":"20140216",
                    "Timestamp":"2014-02-16T23:02:44.501825+00:00",
                },
                {
                    "Uptime":838,
                    "Setup":218,
                    "Stop":384,
                    "NoData":0,
                    "Other":0,
                    "RowKey":"20140217",
                    "Timestamp":"2014-02-17T23:03:02.1430764+00:00",
                }
            ]


### List Utilization Cumulative [GET]

Returns day cumulative utilization for specified day interval given by the `from` (include) to the `to` (include) params.

+ Parameters

    + variableId (integer, required, `11`) ... The `variableId` of the variable.
    + from (string, required, `2014-02-15`) ... Requested start day in format: `YYYY-MM-DD`.
    + to (string, required, `2014-02-17`) ... Requested finish day in format: `YYYY-MM-DD`.

+ Response 200

    [Utilization Cumulative Collection][]

# Group User Messages

## User Messages Collection [/UserMessages/{userId}]

+ Model (application/json)
    + Body

            {
                "_embedded": {
                    "messages": [
                        {
                            "_links" : {
                                "self": { "href": "/Api/UserMessage/10/2520111168377037307" }
                            },
                            "userId": "10",
                            "id": "2520111168377037307",
                            "Text": "Message text 2"
                        },
                        {
                            "_links" : {
                                "self": { "href": "/Api/UserMessage/10/2520322875831626680" }
                            },
                            "userId": "10",
                            "id": "2520322875831626680",
                            "Text": "Message text 1",
                            "ReadTime": "2012-03-07T23:00:00"
                        }
                    ]
                }
            }

### List Messages [GET]

Returns last `n` user messages. Number `n` is a server constant set to 20 at this moment.

+ Response 200

    [User Messages Collection][]

## User Message [/UserMessages/{userId}/{id}]
A single User Message with all its details.

+ Parameters
    + userId (required, integer, `1`) ... The `userId` of the user.
    + id (required, string, `2520111168377037307`) ... String unique user message `id` to perform action with.

+ Model
    + Body

            {
                "_links" : {
                    "self": { "href": "/Api/UserMessage/10/2520322875831626680" }
                },
                "userId": "10",
                "id": "2520322875831626680",
                "text": "Message text 1",
                "readTime": "2012-03-07T22:01:00"
            }

### Edit a User Message [PATCH]
To update a User Message send a JSON *model* with updated value for one or more of the User Message resource properties.

*Note*: Only `ReadTime` property is allowed to be modified, other properties are ignored, at this moment.

*Note2*: The updated value for `ReadTime` property is overwrite by the server actual time value.

#### Description of server responses

- `400 Bad Request` \- The request could not be understood or was missing required information.

+ Request (application/json)

        {
            "ReadTime": "2012-03-07T22:00:00"
        }

+ Response 200

    [User Message][]

+ Response 400