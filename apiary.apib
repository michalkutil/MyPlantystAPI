FORMAT: 1A
HOST: http://my.plantyst.com/Api

# MyPlantyst API

# Group User Messages

## User Messages Collection [/UserMessages/{userId}]

+ Model (application/json)
    + Body

            {
                "_embedded": {
                    "messages": [
                        {
                            "_links" : {
                                "self": { "href": "/Api/UserMessage/10/2520111168377037307" }
                            },
                            "userId": "10",
                            "id": "2520111168377037307",
                            "Text": "Message text 2"
                        },
                        {
                            "_links" : {
                                "self": { "href": "/Api/UserMessage/10/2520322875831626680" }
                            },
                            "userId": "10",
                            "id": "2520322875831626680",
                            "Text": "Message text 1",
                            "ReadTime": "2012-03-07T23:00:00"
                        }
                    ]
                }
            }

### List Messages [GET]

Returns last `n` user messages. Number `n` is a server constant set to 20 at this moment.

+ Response 200

    [User Messages Collection][]

## User Message [/UserMessages/{userId}/{id}]
A single User Message with all its details.

+ Parameters
    + userId (required, integer, `1`) ... The `userId` of the user.
    + id (required, string, `2520111168377037307`) ... String uniqueue user message `id` to perform action with.

+ Model
    + Body

            {
                "_links" : {
                    "self": { "href": "/Api/UserMessage/10/2520322875831626680" }
                },
                "userId": "10",
                "id": "2520322875831626680",
                "text": "Message text 1",
                "readTime": "2012-03-07T22:01:00"
            }

### Edit a User Message [PATCH]
To update a User Message send a JSON *model* with updated value for one or more of the User Message resource properties.

*Note*: Only `ReadTime` property is allowed to be modified, other properties are ignored, at this moment.

*Note2*: The updated value for `ReadTime` property is overwrite by the server actual time value.

#### Description of server responses

- `400 Bad Request` \- The request could not be understood or was missing required information.

+ Request (application/json)

        {
            "ReadTime": "2012-03-07T22:00:00"
        }

+ Response 200

    [User Message][]

+ Response 400

# Group Measurement Listing

## User Measurements Collection [/Measuremenents]

# Group Variable Time Data

## Utilization Cumulative Collection [/UtilizationCumulative/{?variableId,from,to}]

+ Model (application/json)
    + Body

            [
                {
                    "Uptime":0,
                    "Setup":9,
                    "Stop":1431,
                    "NoData":0,
                    "Other":0,
                    "RowKey":"20140215",
                    "Timestamp":"2014-02-15T23:02:39.6195401+00:00",
                },
                {
                    "Uptime":85,
                    "Setup":38,
                    "Stop":1317,
                    "NoData":0,
                    "Other":0,
                    "RowKey":"20140216",
                    "Timestamp":"2014-02-16T23:02:44.501825+00:00",
                },
                {
                    "Uptime":838,
                    "Setup":218,
                    "Stop":384,
                    "NoData":0,
                    "Other":0,
                    "RowKey":"20140217",
                    "Timestamp":"2014-02-17T23:03:02.1430764+00:00",
                }
            ]


### List Utilization Cumulative [GET]

Returns day cumulative utilization for specified day interval given by the `from` (include) to the `to` (include) params.

+ Parameters

    + variableId (integer, required, `11`) ... The `variableId` of the variable.
    + from (string, required, `2014-02-15`) ... Requested start day in format: `YYYY-MM-DD`.
    + to (string, required, `2014-02-17`) ... Requested finish day in format: `YYYY-MM-DD`.

+ Response 200

    [Utilization Cumulative Collection][]

# Group Multiple Measurement Data

## Multiple Measurements Utilization Data Collection [/MeasurementData]

+ Model (application/json)
    + Body

            {
                "results": [
                    {
                        "query": {
                            "measurementId": 2,
                            "from": "2011-11-30T23:00:00",
                            "to": "2011-12-01T07:00:00",
                            "view": "baseHour"
                        },
                        "data": [
                            {
                                "itemCount": 1,
                                "timeSquareSum": 100,
                                "timeSum": 10,
                                "timeValueSum": 50,
                                "valueSum": 5
                            },
                            {
                                "itemCount": 0
                            }
                        ]
                    },
                    {
                        "query": {
                            "measurementId": 14,
                            "view": "baseHour",
                            "from": "2012-12-20T12:34:56",
                            "to": "2013-01-01T01:02"
                        },
                        "data": [
                            {
                                "itemCount": 0
                            },
                            {
                                "itemCount": 1,
                                "timeSquareSum": 100,
                                "timeSum": 10,
                                "timeValueSum": 50.0,
                                "valueSum": 5.0
                            },
                            {
                                "itemCount": 3,
                                "timeSquareSum": 100,
                                "timeSum": 10,
                                "timeValueSum": 66.0,
                                "valueSum": 6.6
                            },
                            {
                                "itemCount": 0
                            }
                        ]
                    }
                ]
            }


### Multiple Measurements Cumulative Utilization Data [POST]

Returns cumulative utilization data for each of the queries provided in the `queries` field of the
JSON *model*.

The payload contains `Queries` array. Its members contain:
* `MeasurementId` `int` required. Identifies the ID of the measurement.
* `View` `string` required. Identifies the measurement view to be used. 
The view available for the given measurement is provided in the results 
of Measurement API endpoint.
* `From` `DateTime` required. Specifies the lower bound of the data query.
* `To` `DateTime` required. Specifies the upper bound of the data query.

In the result, each of the members of the `results` array contains:
* `query` A copy of a query from the *model*, identifying which query the result belongs to.
* `data` The result of the query having the following fields:
    * `itemCount` `int`. Always present, specifies the count of items in the aggregation.
    * `timeSquareSum` `long`. Omittable.
    * `timeSum` `long`. Omittable.
    * `timeValueSum` `double`. Omittable.
    * `valueSum` `double`. Omittable.

+ Request

        {
            "Queries": [
                {
                    "MeasurementId": 2,
                    "View": "baseHour",
                    "From": "2011-11-30T23:00",
                    "To": "2011-12-01T07:00"
                },
                {
                    "MeasurementId": 14,
                    "View": "baseHour",
                    "From": "2012-12-20T12:34:56",
                    "To": "2013-01-01T01:02"
                }
            ]
        }

+ Response 200

    [Multiple Measurements Utilization Data Collection][]

+ Response 401